---
name: Build and Release
on:
  push:
    branches:
      - main
  workflow_dispatch:
    
jobs:
  build:
    if: contains(github.event.head_commit.message, '[Release]')
    name: Build GoBDS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.1"

      - name: Build Windows executable
        run: GOOS=windows GOARCH=amd64 go build -o gobds.exe ./cmd/main.go

      - name: Build Linux executable
        run: GOOS=linux GOARCH=amd64 go build -o gobds-linux ./cmd/main.go

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gobds.exe
          asset_name: gobds.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gobds-linux
          asset_name: gobds-linux
          asset_content_type: application/octet-stream
...